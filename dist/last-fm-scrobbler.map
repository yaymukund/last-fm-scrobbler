{"version":3,"sources":["last-fm-scrobbler/api.js","last-fm-scrobbler/helpers.js"],"sourcesContent":["define('last-fm-scrobbler/api', ['exports', 'last-fm-scrobbler/helpers'], function (exports, helpers) {\n\n  'use strict';\n\n  var API_URL = 'http://ws.audioscrobbler.com/2.0/';\n\n  var scrobble = function scrobble(tags) {\n    var params = helpers.filterParams(tags, {\n      required: ['artist', 'track', 'timestamp'],\n      optional: ['album', 'trackNumber', 'context', 'mbid', 'duration', 'albumArtist']\n    });\n\n    params['format=json'] = helpers.config.apiKey;\n    params.method = 'track.scrobble';\n    params.sk = helpers.config.sessionKey;\n    helpers.sign(params);\n\n    return fetch(API_URL, {\n      method: 'post',\n      body: helpers.toFormData(params)\n    });\n  };\n\n  var getToken = function getToken() {\n    var params = helpers.sign({\n      method: 'auth.getToken',\n      api_key: helpers.config.apiKey\n    });\n\n    return fetch(API_URL + '?' + helpers.toQueryParams(params));\n  };\n\n  var getSession = function getSession(token) {\n    var params = helpers.sign({\n      method: 'auth.getSession',\n      token: token,\n      api_key: helpers.config.apiKey\n    });\n\n    return fetch(API_URL + '?' + helpers.toQueryParams(params));\n  };\n\n  var updateNowPlaying = function updateNowPlaying(tags) {\n    var params = helpers.filterParams(tags, {\n      required: ['artist', 'track'],\n      optional: ['album', 'trackNumber', 'context', 'mbid', 'duration', 'albumArtist']\n    });\n\n    params['format=json'] = helpers.config.apiKey;\n    params.method = 'track.updateNowPlaying';\n    params.sk = helpers.config.sessionKey;\n    helpers.sign(params);\n\n    return fetch(API_URL, {\n      method: 'post',\n      body: helpers.toFormData(params)\n    });\n  };\n\n  exports.scrobble = scrobble;\n  exports.updateNowPlaying = updateNowPlaying;\n  exports.getToken = getToken;\n  exports.getSession = getSession;\n\n});","define('last-fm-scrobbler/helpers', ['exports'], function (exports) {\n\n  'use strict';\n\n  var _config = {},\n      _EXCLUDED_KEYS = ['format', 'callback'];\n\n  var _setRequiredParam = function _setRequiredParam(config, param) {\n    if (!config[param]) {\n      throw new Error('Required parameter ' + param + ' missing.');\n    }\n\n    _config[param] = config[param];\n  };\n\n  var configure = function configure(config) {\n    _setRequiredParam(config, 'apiKey');\n    _setRequiredParam(config, 'secret');\n    _setRequiredParam(config, 'sessionKey');\n    _setRequiredParam(config, 'md5');\n  };\n\n  var sign = function sign(options) {\n    options.api_key = _config.apiKey;\n\n    var keys = Object.keys(options).sort(),\n        str = '';\n\n    keys.forEach(function (key) {\n      if (_EXCLUDED_KEYS.indexOf(key) !== -1) {\n        return;\n      }\n\n      str += '' + key + '' + options[key];\n    });\n\n    str += _config.secret;\n    options.api_sig = _config.md5(str);\n  };\n\n  var toFormData = function toFormData(obj) {\n    var formData = new FormData();\n\n    Object.keys(obj).forEach(function (k) {\n      formData.append(k, obj[k]);\n    });\n\n    return formData;\n  };\n\n  var filterParams = function filterParams(params, keys) {\n    var _p = {};\n\n    if (keys.required) {\n      keys.required.forEach(function (i) {\n        if (!params[i]) {\n          throw new Error('Missing required parameter: ' + i);\n        }\n\n        _p[i] = params[i];\n      });\n    }\n\n    if (keys.optional) {\n      keys.optional.forEach(function (i) {\n        if (params[i]) {\n          _p[i] = params[i];\n        }\n      });\n    }\n\n    return _p;\n  };\n\n  var toQueryParams = function toQueryParams(params) {\n    var args = [];\n\n    Object.keys(params).forEach(function (k) {\n      args.push('' + k + '=' + params[k]);\n    });\n\n    return args.join('&');\n  };\n\n  exports.configure = configure;\n  exports.config = _config;\n  exports.toFormData = toFormData;\n  exports.filterParams = filterParams;\n  exports.toQueryParams = toQueryParams;\n  exports.sign = sign;\n\n});"],"names":[],"mappingsfile":"last-fm-scrobbler.js"}